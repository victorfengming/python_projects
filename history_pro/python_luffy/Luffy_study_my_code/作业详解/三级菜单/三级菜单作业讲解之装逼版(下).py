#这个是就是文艺(装逼)青年版, 来,我们加一个回退功能
menu = {
	'北京':{
		'海淀':{...},
		'昌平':{
			'沙河':{
				'老男孩':{...},
				'贼溜啊':{...},	
			},
			'天通苑':{
			'这样':{
			'那样的':{...},
			'啥样的':{
				'王':{
					
				},
				'李':{...},
			},
			'高':{},
			'高手':{},
			},
			},
			'回龙观':{
			
			},
		},
		'朝阳':{...},
		'东城':{...},
	},
	'上海':{
		'闽行':{...},
		'闸北':{...},
		'浦东':{...},
	},
	'山东':{
		'济南':{
			
			'景点':{},
			'美食':{},
			'商场':{},
			'银行':{},
			'医院':{},
			'电影院':{},
			'KTV':{},
			'酒店':{},
			'加油站':{},
		},
		'青岛':{
		
			'景点':{},
			'美食':{},
			'商场':{},
			'银行':{},
			'医院':{},
			'电影院':{},
			'KTV':{},
			'酒店':{},
			'加油站':{},
		},
		'淄博':{...},
		'枣庄':{...},
		'东营':{...},
		'烟台':{
		
			'景点':{},
			'美食':{},
			'商场':{},
			'银行':{},
			'医院':{},
			'电影院':{},
			'KTV':{},
			'酒店':{},
			'加油站':{},
		},
		'潍坊':{...},
		'济宁':{...},
		'潍坊':{...},
		'泰安':{...},
		'威海':{...},
		'日照':{...},
		'莱芜':{...},
	},
}
#保存记录每一层的记录
current_layer = menu
#我在这里加一条语句来记住上一层
#last_layer = menu 不要这个了
layers = [] 
#layers 相当于一个列表
while True:
	for k in current_layer:
		print(k)
	choice = input(">:").strip()
	if not choice:continue
	if  choice in current_layer:
		#进入之前要记住上一层
		#last_layer = current_layer		
		layers.append(current_layer)#进入下一层,保存当前层
		print(layers)
		current_layer = current_layer[choice]		#[北京]
	elif choice == 'b':
		if len(layers) != 0:
			current_layer = layers.pop()
		else:
			print("还退个锤子退,再退就过油子了")
		#pass	#这个pass就比较吊了#这个咋也不要了呢???
		
		#搞定了,随便怎么回了现在 牛逼吧,现在还是有点瑕疵 就是 最外层不能回退 要是回退就报错了
		
#现在问题来了,怎么退回去,这一层就是第二层,进来之后就是这一层了,程序已经不记得上一层了怎么回去??? 那要是记住好像能行么?那第三层能记住最外层么?
		#current_layer  = current_layer[choice]
		#wow 我靠 ,牛逼牛逼,哎等会儿,调试出bug了,这怎么只能回退一次呢???这可咋整,不管进入多少步?都只能退一回,程序只能记住上一个层级.额 (⊙o⊙)… 还是不行啊,他不能再往回走,咋整吧	其实我想的是这样,我一路走过去,再一路返回去 
# 好了我来提供一个新的思路:
	# 来把进入的每一层都保存下来就完了嘛
	
#看到了吧,这短短10多行代码,就解决这个问题了,其实那个存层级的列表,也还可以优化,因为每进入一个列表就要存一层,还是能优化的,现在这个程度已经稍微高级一点了儿
# 行了 就到这儿了