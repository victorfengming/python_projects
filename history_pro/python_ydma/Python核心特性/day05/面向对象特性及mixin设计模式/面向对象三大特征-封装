面向对象的三大特征：
    封装，继承与多态


封装特征：
    实际工作中很多的成员不方便为对象之外的访问或者操作的，所以需要限定以下是否可以操作成员。
    封装特性就是对于成员操作进行限制的保护性措施！

    面向对象的封装分为三个级别：
        私有化封装  OK
        受保护的封装（暂时不讲，在继承章节讲解）
        公共的封装  OK

    对象/类成员的访问：
        1.当前类/对象内部访问 （在类的结构内部）
        2.类和对象的外部访问  （在类的结构外部）
        3.类和对象的子类/子对象的访问（在类的结构外部，在子类/对象的内部）


    私有化封装：
        方法：在成员属性或者方法名称之前，添加双下划线，就可以私有化成员。
        特征：私有化的成员属性和方法，无法在类/对象的外部访问；私有化成员仅允许在类/对象的内部访问

    公共的封装：
        方法： 任何成员在没有进行私有化操作的时候默认都是公共的封装。
        特征： 公共的封装成员属性和方法，在任何位置都可以被访问。


python封装的迷幻~：（了解，但是不允许使用）
    其实python没由实现和其他语言一样的面向对象封装策略（还不是很完备）

    私有化封装采用了name mangling（改名） 的策略实现的私有化操作。并不是真正的私有优化！
    改名策略：将原有成员属性或者方法名 修改为 _类名__成员名